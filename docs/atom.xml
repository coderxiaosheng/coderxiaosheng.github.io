<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">程序员小盛</title>
    <subtitle type="html">MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。</subtitle>
    <updated>2023-08-27T21:32:25&#43;08:00</updated>
    <id>https://coderxiaosheng.github.io/</id>
    <link rel="alternate" type="text/html" href="https://coderxiaosheng.github.io/" />
    <link rel="self" type="application/atom&#43;xml" href="https://coderxiaosheng.github.io/atom.xml" />
    <author>
            <name>reuixiy</name>
            <uri>https://coderxiaosheng.github.io/</uri>
            
                <email>reuixiy@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    <generator uri="https://gohugo.io/" version="0.115.3">Hugo</generator>
        <entry>
            <title type="text">六款值得推荐的Android开源框架简介</title>
            <link rel="alternate" type="text/html" href="https://coderxiaosheng.github.io/posts/android-6-open-source/" />
            <id>https://coderxiaosheng.github.io/posts/android-6-open-source/</id>
            <updated>2023-08-27T21:32:23&#43;08:00</updated>
            <published>2023-08-24T08:35:08&#43;08:00</published>
            <author>
                    <name>reuixiy</name>
                    <uri>https://io-oi.me/</uri>
                    <email>reuixiy@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">技术不再多，知道一些常用的、不错的就够了。下面就是最近整理的“性价比”比较高的Android开源框架，应该是相对实用的。 1、volley 项目地址 https://github.com/smanikandan14/Volley-demo JSON，图像等的异步下载； 网络请求的排序（scheduling） 网络请求的优先级处理 缓存 多级别取消请求 和Activity和生命周期的联动（Activity结束时同时取消所有网络请求） 2、android-async-http 项目地址： https://gi……</summary>
            
                <content type="html">&lt;p&gt;技术不再多，知道一些常用的、不错的就够了。下面就是最近整理的“性价比”比较高的Android开源框架，应该是相对实用的。&lt;/p&gt;
&lt;h2 id=&#34;1volley&#34;&gt;1、volley&lt;/h2&gt;
&lt;p&gt;项目地址 &lt;a href=&#34;https://github.com/smanikandan14/Volley-demo&#34;&gt;https://github.com/smanikandan14/Volley-demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JSON，图像等的异步下载；
网络请求的排序（scheduling）
网络请求的优先级处理
缓存
多级别取消请求
和Activity和生命周期的联动（Activity结束时同时取消所有网络请求）&lt;/p&gt;
&lt;h2 id=&#34;2android-async-http&#34;&gt;2、android-async-http&lt;/h2&gt;
&lt;p&gt;项目地址： &lt;a href=&#34;https://github.com/loopj/android-async-http&#34;&gt;https://github.com/loopj/android-async-http&lt;/a&gt;，文档介绍： &lt;a href=&#34;http://loopj.com/android-async-http/&#34;&gt;http://loopj.com/android-async-http/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在匿名回调中处理请求结果
在UI线程外进行http请求
文件断点上传
智能重试
默认gzip压缩
支持解析成Json格式
可将Cookies持久化到SharedPreferences&lt;/p&gt;
&lt;h2 id=&#34;3afinal框架&#34;&gt;3、Afinal框架&lt;/h2&gt;
&lt;p&gt;项目地址： &lt;a href=&#34;https://github.com/yangfuhai/afinal&#34;&gt;https://github.com/yangfuhai/afinal&lt;/a&gt;
主要有四大模块：&lt;/p&gt;
&lt;p&gt;数据库模块：Android中的orm框架，使用了线程池对sqlite进行操作。
注解模块：Android中的ioc框架，完全注解方式就可以进行UI绑定和事件绑定。无需findViewById和setClickListener等。
网络模块：通过httpclient进行封装http数据请求，支持Ajax方式加载，支持下载、上传文件功能。
图片缓存模块：通过FinalBitmap，imageview加载bitmap的时候无需考虑bitmap加载过程中出现的oom和Android容器快速滑动时候出现的图片错位等现象。&lt;/p&gt;
&lt;p&gt;FinalBitmap可以配置线程加载线程数量，缓存大小，缓存路径，加载显示动画等。FinalBitmap的内存管理使用lru算法，没有使用弱引用（Android2.3以后Google已经不建议使用弱引用，Android2.3后强行回收软引用和弱引用，详情查看Android官方文档），更好的管理bitmap内存。FinalBitmap可以自定义下载器，用来扩展其他协议显示网络图片，比如ftp等。同时可以自定义bitmap显示器，
在imageview显示图片的时候播放动画等（默认是渐变动画显示）。&lt;/p&gt;
&lt;h2 id=&#34;4xutils框架&#34;&gt;4、xUtils框架&lt;/h2&gt;
&lt;p&gt;项目地址： &lt;a href=&#34;https://github.com/wyouflf/xUtils&#34;&gt;https://github.com/wyouflf/xUtils&lt;/a&gt;，主要有四大模块：
数据库模块：&lt;/p&gt;
&lt;p&gt;Android 中的 orm 框架，一行代码就可以进行增删改查；
支持事务，默认关闭；
可通过注解自定义表名，列名，外键，唯一性约束，NOT NULL约束，CHECK约束等（需要混淆的时候请注解表名和列名）；
支持绑定外键，保存实体时外键关联实体自动保存或更新；
自动加载外键关联实体，支持延时加载；
支持链式表达查询，更直观的查询语义，参考下面的介绍或sample中的例子。&lt;/p&gt;
&lt;p&gt;注解模块：&lt;/p&gt;
&lt;p&gt;Android中的 ioc 框架，完全注解方式就可以进行 UI，资源和事件绑定；
新的事件绑定方式，使用混淆工具混淆后仍可正常工作；
目前支持常用的20种事件绑定，参见 View Common Event Listener 类和包com.lidroid.xutils.view.annotation.event。&lt;/p&gt;
&lt;p&gt;网络模块：&lt;/p&gt;
&lt;p&gt;支持同步，异步方式的请求；
支持大文件上传，上传大文件不会oom；
支持GET，POST，PUT，MOVE，COPY，DELETE，HEAD，OPTIONS，TRACE，CONNECT请求；
下载支持301/302重定向，支持设置是否根据Content-Disposition重命名下载的文件；
返回文本内容的请求（默认只启用了GET请求）支持缓存，可设置默认过期时间和针对当前请求的过期时间。&lt;/p&gt;
&lt;p&gt;图片缓存模块：&lt;/p&gt;
&lt;p&gt;加载bitmap的时候无需考虑bitmap加载过程中出现的oom和Android容器快速滑动时候出现的图片错位等现象；
支持加载网络图片和本地图片；
内存管理使用lru算法，更好的管理bitmap内存；
可配置线程加载线程数量，缓存大小，缓存路径，加载显示动画等。&lt;/p&gt;
&lt;h2 id=&#34;5thinkandroid&#34;&gt;5、ThinkAndroid&lt;/h2&gt;
&lt;p&gt;项目地址： &lt;a href=&#34;https://github.com/white-cat/ThinkAndroid&#34;&gt;https://github.com/white-cat/ThinkAndroid&lt;/a&gt;
主要有以下模块：&lt;/p&gt;
&lt;p&gt;MVC模块：实现视图与模型的分离。
ioc模块：Android中的ioc模块，完全注解方式就可以进行UI绑定、res中的资源的读取、以及对象的初始化。
数据库模块：Android中的orm框架，使用了线程池对sqlite进行操作。
http模块：通过httpclient进行封装http数据请求，支持异步及同步方式加载。
缓存模块：通过简单的配置及设计可以很好的实现缓存，对缓存可以随意的配置
图片缓存模块：imageview加载图片的时候无需考虑图片加载过程中出现的oom和Android容器快速滑动时候出现的图片错位等现象。
配置器模块：可以对简易的实现配对配置的操作，目前配置文件可以支持Preference、Properties对配置进行存取。
日志打印模块：可以较快的轻易的是实现日志打印，支持日志打印的扩展，目前支持对sdcard写入本地打印、以及控制台打印
下载器模块：可以简单的实现多线程下载、后台下载、断点续传、对下载进行控制、如开始、暂停、删除等等。
网络状态检测模块：当网络状态改变时，对其进行检。&lt;/p&gt;
&lt;h2 id=&#34;6loonandroid&#34;&gt;6、LoonAndroid&lt;/h2&gt;
&lt;p&gt;项目地址： &lt;a href=&#34;https://github.com/gdpancheng/LoonAndroid&#34;&gt;https://github.com/gdpancheng/LoonAndroid&lt;/a&gt;
主要有以下模块：&lt;/p&gt;
&lt;p&gt;自动注入框架（只需要继承框架内的APP既可）
图片加载框架（多重缓存，自动回收，最大限度保证内存的安全性）
网络请求模块（继承了基本上现在所有的http请求）
eventbus（集成一个开源的框架）
验证框架（集成开源框架）
Json解析（支持解析成集合或者对象）
数据库（不知道是哪位写的 忘记了）
多线程断点下载（自动判断是否支持多线程，判断是否是重定向）
自动更新模块
一系列工具类&lt;/p&gt;
&lt;p&gt;其中的 Volley 在2013 年有研究过，扩展性非常好，个人比较喜欢的风格。其他如 Android-async-http、Afinal 也相当不错。（转载自catoop博客）&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://coderxiaosheng.github.io/categories/%E5%BC%80%E5%8F%91/" term="开发" label="开发" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://coderxiaosheng.github.io/tags/android/" term="Android" label="Android" />
                            
                        
                    
                
            
        </entry>
    
</feed>
